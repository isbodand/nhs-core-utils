plugins {
    id 'scala'
    id 'maven'
    id 'jacoco'
    id 'nebula.provided-base' version '3.0.3'
}

group 'com.github.bodand'
version '1.0'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenLocal()
    jcenter()
    mavenCentral()
}

ext {
    scalaMajor = '2.12'
    scalaMinor = '8'
    scalaVersion = "$scalaMajor.$scalaMinor"
    akkaVersion = '2.5.19'
}

dependencies {
    // Scala - Standard library
    provided group: 'org.scala-lang', name: 'scala-library', version: scalaVersion
    // NHentaiStatistics Core - The API for which these are utils
    implementation group: 'com.github.isbodand', name: 'nhstatistics-core', version: '1.3.5.2'

    // Akka Actor - Concurrent Actor API
    implementation group: 'com.typesafe.akka', name: "akka-actor_$scalaMajor", version: akkaVersion

    // Apache Commons IO - IO tools
    implementation group: 'commons-io', name: 'commons-io', version: '2.6'
    // Apache HttpComponents HttpClient - HTTP library
    implementation group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.6'

    // Logging
    implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
    runtime group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'

    // Frameworks
    testImplementation group: 'org.scalatest', name: "scalatest_$scalaMajor", version: '3.0.5'
    testImplementation group: 'junit', name: 'junit', version: '4.12'
    testImplementation group: 'org.scalactic', name: "scalactic_$scalaMajor", version: '3.0.5'
    // Akka Testkit - Testing Akka Actors
    testImplementation group: 'com.typesafe.akka', name: "akka-testkit_$scalaMajor", version: akkaVersion
}

jar {
    baseName = 'nhstatistics-core-utils'

    manifest {
        attributes 'Name': 'NHentaiStatistics Core Utils'
        attributes 'Specification-Title': 'Made up nhentai api utils'
        attributes 'Specification-Version': "$version"
        attributes 'Specification-Vendor': 'InfoSoft Corporation'
    }

    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task scaladocJar(type: Jar, dependsOn: scaladoc) {
    classifier = 'javadoc'
    from scaladoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives scaladocJar
}

install {
    repositories.mavenInstaller {
        pom.project {
            licenses {
                license {
                    //noinspection GroovyAssignabilityCheck
                    name 'The Apache Software License, Version 2.0'
                    url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    distribution 'repo'
                }
            }
        }
    }
}

jacocoTestReport {
    reports {
        xml.setEnabled(true)
        html.setEnabled(false)
    }
}
